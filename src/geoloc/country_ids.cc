/*
 * shiro - High performance, high quality osu!Bancho C++ re-implementation
 * Copyright (C) 2018-2020 Marc3842h, czapek
 * Copyright (C) 2021 Rynnya
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#include <algorithm>

#include "../thirdparty/loguru.hh"
#include "country_ids.hh"

std::unordered_map<std::string, uint8_t> shiro::geoloc::country_ids = {
    { "BD", 1   },
    { "BE", 2   },
    { "BF", 3   },
    { "BG", 4   },
    { "BA", 5   },
    { "BB", 6   },
    { "WF", 7   },
    { "BL", 8   },
    { "BM", 9   },
    { "BN", 10  },
    { "BO", 11  },
    { "BH", 12  },
    { "BI", 13  },
    { "BJ", 14  },
    { "BT", 15  },
    { "JM", 16  },
    { "BV", 17  },
    { "BW", 18  },
    { "WS", 19  },
    { "BQ", 20  },
    { "BR", 21  },
    { "BS", 22  },
    { "JE", 23  },
    { "BY", 24  },
    { "BZ", 25  },
    { "RU", 26  },
    { "RW", 27  },
    { "RS", 28  },
    { "TL", 29  },
    { "RE", 30  },
    { "TM", 31  },
    { "TJ", 32  },
    { "RO", 33  },
    { "TK", 34  },
    { "GW", 35  },
    { "GU", 36  },
    { "GT", 37  },
    { "GS", 38  },
    { "GR", 39  },
    { "GQ", 40  },
    { "GP", 41  },
    { "JP", 42  },
    { "GY", 43  },
    { "GG", 44  },
    { "GF", 45  },
    { "GE", 46  },
    { "GD", 47  },
    { "GB", 48  },
    { "GA", 49  },
    { "SV", 50  },
    { "GN", 51  },
    { "GM", 52  },
    { "GL", 53  },
    { "GI", 54  },
    { "GH", 55  },
    { "OM", 56  },
    { "TN", 57  },
    { "JO", 58  },
    { "HR", 59  },
    { "HT", 60  },
    { "HU", 61  },
    { "HK", 62  },
    { "HN", 63  },
    { "HM", 64  },
    { "VE", 65  },
    { "PR", 66  },
    { "PS", 67  },
    { "PW", 68  },
    { "PT", 69  },
    { "SJ", 70  },
    { "PY", 71  },
    { "IQ", 72  },
    { "PA", 73  },
    { "PF", 74  },
    { "PG", 75  },
    { "PE", 76  },
    { "PK", 77  },
    { "PH", 78  },
    { "PN", 79  },
    { "PL", 80  },
    { "PM", 81  },
    { "ZM", 82  },
    { "EH", 83  },
    { "EE", 84  },
    { "EG", 85  },
    { "ZA", 86  },
    { "EC", 87  },
    { "IT", 88  },
    { "VN", 89  },
    { "SB", 90  },
    { "ET", 91  },
    { "SO", 92  },
    { "ZW", 93  },
    { "SA", 94  },
    { "ES", 95  },
    { "ER", 96  },
    { "ME", 97  },
    { "MD", 98  },
    { "MG", 99  },
    { "MF", 100 },
    { "MA", 101 },
    { "MC", 102 },
    { "UZ", 103 },
    { "MM", 104 },
    { "ML", 105 },
    { "MO", 106 },
    { "MN", 107 },
    { "MH", 108 },
    { "MK", 109 },
    { "MU", 110 },
    { "MT", 111 },
    { "MW", 112 },
    { "MV", 113 },
    { "MQ", 114 },
    { "MP", 115 },
    { "MS", 116 },
    { "MR", 117 },
    { "IM", 118 },
    { "UG", 119 },
    { "TZ", 120 },
    { "MY", 121 },
    { "MX", 122 },
    { "IL", 123 },
    { "FR", 124 },
    { "IO", 125 },
    { "SH", 126 },
    { "FI", 127 },
    { "FJ", 128 },
    { "FK", 129 },
    { "FM", 130 },
    { "FO", 131 },
    { "NI", 132 },
    { "NL", 133 },
    { "NO", 134 },
    { "NA", 135 },
    { "VU", 136 },
    { "NC", 137 },
    { "NE", 138 },
    { "NF", 139 },
    { "NG", 140 },
    { "NZ", 141 },
    { "NP", 142 },
    { "NR", 143 },
    { "NU", 144 },
    { "CK", 145 },
    { "XK", 146 },
    { "CI", 147 },
    { "CH", 148 },
    { "CO", 149 },
    { "CN", 150 },
    { "CM", 151 },
    { "CL", 152 },
    { "CC", 153 },
    { "CA", 154 },
    { "CG", 155 },
    { "CF", 156 },
    { "CD", 157 },
    { "CZ", 158 },
    { "CY", 159 },
    { "CX", 160 },
    { "CR", 161 },
    { "CW", 162 },
    { "CV", 163 },
    { "CU", 164 },
    { "SZ", 165 },
    { "SY", 166 },
    { "SX", 167 },
    { "KG", 168 },
    { "KE", 169 },
    { "SS", 170 },
    { "SR", 171 },
    { "KI", 172 },
    { "KH", 173 },
    { "KN", 174 },
    { "KM", 175 },
    { "ST", 176 },
    { "SK", 177 },
    { "KR", 178 },
    { "SI", 179 },
    { "KP", 180 },
    { "KW", 181 },
    { "SN", 182 },
    { "SM", 183 },
    { "SL", 184 },
    { "SC", 185 },
    { "KZ", 186 },
    { "KY", 187 },
    { "SG", 188 },
    { "SE", 189 },
    { "SD", 190 },
    { "DO", 191 },
    { "DM", 192 },
    { "DJ", 193 },
    { "DK", 194 },
    { "VG", 195 },
    { "DE", 196 },
    { "YE", 197 },
    { "DZ", 198 },
    { "US", 199 },
    { "UY", 200 },
    { "YT", 201 },
    { "UM", 202 },
    { "LB", 203 },
    { "LC", 204 },
    { "LA", 205 },
    { "TV", 206 },
    { "TW", 207 },
    { "TT", 208 },
    { "TR", 209 },
    { "LK", 210 },
    { "LI", 211 },
    { "LV", 212 },
    { "TO", 213 },
    { "LT", 214 },
    { "LU", 215 },
    { "LR", 216 },
    { "LS", 217 },
    { "TH", 218 },
    { "TF", 219 },
    { "TG", 220 },
    { "TD", 221 },
    { "TC", 222 },
    { "LY", 223 },
    { "VA", 224 },
    { "VC", 225 },
    { "AE", 226 },
    { "AD", 227 },
    { "AG", 228 },
    { "AF", 229 },
    { "AI", 230 },
    { "VI", 231 },
    { "IS", 232 },
    { "IR", 233 },
    { "AM", 234 },
    { "AL", 235 },
    { "AO", 236 },
    { "AQ", 237 },
    { "AS", 238 },
    { "AR", 239 },
    { "AU", 240 },
    { "AT", 241 },
    { "AW", 242 },
    { "IN", 243 },
    { "AX", 244 },
    { "AZ", 245 },
    { "IE", 246 },
    { "ID", 247 },
    { "UA", 248 },
    { "QA", 249 },
    { "MZ", 250 },
};

uint8_t shiro::geoloc::get_country_id(const std::string &country_code) {
    auto iterator = country_ids.find(country_code);

    if (iterator == country_ids.end()) {
        return 42;
    }

    return iterator->second;
}
